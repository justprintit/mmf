// Code generated by go-swagger; DO NOT EDIT.

package categories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetCategoriesParams creates a new GetCategoriesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetCategoriesParams() *GetCategoriesParams {
	return &GetCategoriesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetCategoriesParamsWithTimeout creates a new GetCategoriesParams object
// with the ability to set a timeout on a request.
func NewGetCategoriesParamsWithTimeout(timeout time.Duration) *GetCategoriesParams {
	return &GetCategoriesParams{
		timeout: timeout,
	}
}

// NewGetCategoriesParamsWithContext creates a new GetCategoriesParams object
// with the ability to set a context for a request.
func NewGetCategoriesParamsWithContext(ctx context.Context) *GetCategoriesParams {
	return &GetCategoriesParams{
		Context: ctx,
	}
}

// NewGetCategoriesParamsWithHTTPClient creates a new GetCategoriesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetCategoriesParamsWithHTTPClient(client *http.Client) *GetCategoriesParams {
	return &GetCategoriesParams{
		HTTPClient: client,
	}
}

/* GetCategoriesParams contains all the parameters to send to the API endpoint
   for the get categories operation.

   Typically these are written to a http.Request.
*/
type GetCategoriesParams struct {

	/* Page.

	   Page number. Default is 1
	*/
	Page *string

	/* PerPage.

	   Number of results per page. Default is 20
	*/
	PerPage *string

	/* Top.

	   Filter top categories
	*/
	Top *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get categories params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCategoriesParams) WithDefaults() *GetCategoriesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get categories params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCategoriesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get categories params
func (o *GetCategoriesParams) WithTimeout(timeout time.Duration) *GetCategoriesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get categories params
func (o *GetCategoriesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get categories params
func (o *GetCategoriesParams) WithContext(ctx context.Context) *GetCategoriesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get categories params
func (o *GetCategoriesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get categories params
func (o *GetCategoriesParams) WithHTTPClient(client *http.Client) *GetCategoriesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get categories params
func (o *GetCategoriesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPage adds the page to the get categories params
func (o *GetCategoriesParams) WithPage(page *string) *GetCategoriesParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get categories params
func (o *GetCategoriesParams) SetPage(page *string) {
	o.Page = page
}

// WithPerPage adds the perPage to the get categories params
func (o *GetCategoriesParams) WithPerPage(perPage *string) *GetCategoriesParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get categories params
func (o *GetCategoriesParams) SetPerPage(perPage *string) {
	o.PerPage = perPage
}

// WithTop adds the top to the get categories params
func (o *GetCategoriesParams) WithTop(top *bool) *GetCategoriesParams {
	o.SetTop(top)
	return o
}

// SetTop adds the top to the get categories params
func (o *GetCategoriesParams) SetTop(top *bool) {
	o.Top = top
}

// WriteToRequest writes these params to a swagger request
func (o *GetCategoriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Page != nil {

		// query param page
		var qrPage string

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PerPage != nil {

		// query param per_page
		var qrPerPage string

		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := qrPerPage
		if qPerPage != "" {

			if err := r.SetQueryParam("per_page", qPerPage); err != nil {
				return err
			}
		}
	}

	if o.Top != nil {

		// query param top
		var qrTop bool

		if o.Top != nil {
			qrTop = *o.Top
		}
		qTop := swag.FormatBool(qrTop)
		if qTop != "" {

			if err := r.SetQueryParam("top", qTop); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
