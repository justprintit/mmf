// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetObjectsObjectIDFilesParams creates a new GetObjectsObjectIDFilesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetObjectsObjectIDFilesParams() *GetObjectsObjectIDFilesParams {
	return &GetObjectsObjectIDFilesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetObjectsObjectIDFilesParamsWithTimeout creates a new GetObjectsObjectIDFilesParams object
// with the ability to set a timeout on a request.
func NewGetObjectsObjectIDFilesParamsWithTimeout(timeout time.Duration) *GetObjectsObjectIDFilesParams {
	return &GetObjectsObjectIDFilesParams{
		timeout: timeout,
	}
}

// NewGetObjectsObjectIDFilesParamsWithContext creates a new GetObjectsObjectIDFilesParams object
// with the ability to set a context for a request.
func NewGetObjectsObjectIDFilesParamsWithContext(ctx context.Context) *GetObjectsObjectIDFilesParams {
	return &GetObjectsObjectIDFilesParams{
		Context: ctx,
	}
}

// NewGetObjectsObjectIDFilesParamsWithHTTPClient creates a new GetObjectsObjectIDFilesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetObjectsObjectIDFilesParamsWithHTTPClient(client *http.Client) *GetObjectsObjectIDFilesParams {
	return &GetObjectsObjectIDFilesParams{
		HTTPClient: client,
	}
}

/* GetObjectsObjectIDFilesParams contains all the parameters to send to the API endpoint
   for the get objects object ID files operation.

   Typically these are written to a http.Request.
*/
type GetObjectsObjectIDFilesParams struct {

	/* ObjectID.

	   The object identifier number
	*/
	ObjectID float64

	/* Page.

	   Page number. Default is 1
	*/
	Page *string

	/* PerPage.

	   Number of results per page. Default is 20
	*/
	PerPage *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get objects object ID files params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetObjectsObjectIDFilesParams) WithDefaults() *GetObjectsObjectIDFilesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get objects object ID files params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetObjectsObjectIDFilesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) WithTimeout(timeout time.Duration) *GetObjectsObjectIDFilesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) WithContext(ctx context.Context) *GetObjectsObjectIDFilesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) WithHTTPClient(client *http.Client) *GetObjectsObjectIDFilesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithObjectID adds the objectID to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) WithObjectID(objectID float64) *GetObjectsObjectIDFilesParams {
	o.SetObjectID(objectID)
	return o
}

// SetObjectID adds the objectId to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) SetObjectID(objectID float64) {
	o.ObjectID = objectID
}

// WithPage adds the page to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) WithPage(page *string) *GetObjectsObjectIDFilesParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) SetPage(page *string) {
	o.Page = page
}

// WithPerPage adds the perPage to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) WithPerPage(perPage *string) *GetObjectsObjectIDFilesParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get objects object ID files params
func (o *GetObjectsObjectIDFilesParams) SetPerPage(perPage *string) {
	o.PerPage = perPage
}

// WriteToRequest writes these params to a swagger request
func (o *GetObjectsObjectIDFilesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param object_id
	if err := r.SetPathParam("object_id", swag.FormatFloat64(o.ObjectID)); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage string

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PerPage != nil {

		// query param per_page
		var qrPerPage string

		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := qrPerPage
		if qPerPage != "" {

			if err := r.SetQueryParam("per_page", qPerPage); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
