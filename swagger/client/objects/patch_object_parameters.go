// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/justprintit/mmf/swagger/models"
)

// NewPatchObjectParams creates a new PatchObjectParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchObjectParams() *PatchObjectParams {
	return &PatchObjectParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchObjectParamsWithTimeout creates a new PatchObjectParams object
// with the ability to set a timeout on a request.
func NewPatchObjectParamsWithTimeout(timeout time.Duration) *PatchObjectParams {
	return &PatchObjectParams{
		timeout: timeout,
	}
}

// NewPatchObjectParamsWithContext creates a new PatchObjectParams object
// with the ability to set a context for a request.
func NewPatchObjectParamsWithContext(ctx context.Context) *PatchObjectParams {
	return &PatchObjectParams{
		Context: ctx,
	}
}

// NewPatchObjectParamsWithHTTPClient creates a new PatchObjectParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchObjectParamsWithHTTPClient(client *http.Client) *PatchObjectParams {
	return &PatchObjectParams{
		HTTPClient: client,
	}
}

/* PatchObjectParams contains all the parameters to send to the API endpoint
   for the patch object operation.

   Typically these are written to a http.Request.
*/
type PatchObjectParams struct {

	/* PatchMetadata.

	   Edit the fields of an object. Must be the owner.
	*/
	PatchMetadata *models.ObjectPatchMetadata

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch object params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchObjectParams) WithDefaults() *PatchObjectParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch object params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchObjectParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch object params
func (o *PatchObjectParams) WithTimeout(timeout time.Duration) *PatchObjectParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch object params
func (o *PatchObjectParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch object params
func (o *PatchObjectParams) WithContext(ctx context.Context) *PatchObjectParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch object params
func (o *PatchObjectParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch object params
func (o *PatchObjectParams) WithHTTPClient(client *http.Client) *PatchObjectParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch object params
func (o *PatchObjectParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPatchMetadata adds the patchMetadata to the patch object params
func (o *PatchObjectParams) WithPatchMetadata(patchMetadata *models.ObjectPatchMetadata) *PatchObjectParams {
	o.SetPatchMetadata(patchMetadata)
	return o
}

// SetPatchMetadata adds the patchMetadata to the patch object params
func (o *PatchObjectParams) SetPatchMetadata(patchMetadata *models.ObjectPatchMetadata) {
	o.PatchMetadata = patchMetadata
}

// WriteToRequest writes these params to a swagger request
func (o *PatchObjectParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.PatchMetadata != nil {
		if err := r.SetBodyParam(o.PatchMetadata); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
