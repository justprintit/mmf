swagger: '2.0'
info:
  title: MyMiniFactory API
  description: 3D printable object API
  version: "2"

# the domain of the service
host: www.myminifactory.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api/v2
produces:
  - application/json

################################################################################
#                                  Security                                    #
################################################################################
securityDefinitions:
  oauth_authorization_code:
    description: OAuth 2.0 Authentication with Authentication code flow
    type: oauth2
    flow: accessCode
    authorizationUrl: https://auth.myminifactory.com/web/authorize?client_id=example_client&redirect_uri=http://example.com/callback&response_type=code&state=RANDOM_STRING
    tokenUrl: https://auth.myminifactory.com/v1/oauth/?client_id=example_client&redirect_uri=http://example.com/callback&response_type=code&state=RANDOM_STRING
    scopes:
      basic: |
       to read any and all private data related to a user (e.g. profile info.)
      download: |
       to have download file download authorisations
  oauth_implicit:
    description: OAuth 2.0 Authentication with Implicit flow
    type: oauth2
    flow: implicit
    authorizationUrl: https://auth.myminifactory.com/web/authorize?client_id=example_client&redirect_uri=http://example.com/callback&response_type=code&state=RANDOM_STRING
    scopes:
      basic: |
       to read any and all private data related to a user (e.g. profile info.)
      download: |
       to have download file download authorisations
  key:
    type: apiKey
    in: query
    name: key


################################################################################
#                                           Paths                              #
################################################################################
paths:

  /search:
    parameters:
      - $ref: '#/parameters/q'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
      - $ref: '#/parameters/sort'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/cat'
      - $ref: '#/parameters/support'
      - $ref: '#/parameters/tech'
      - $ref: '#/parameters/complexity'
      - $ref: '#/parameters/featured'
      - $ref: '#/parameters/remix'
      - $ref: '#/parameters/commercial_use'
      - $ref: '#/parameters/exclusive'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Search
      description: Give search results according the the query. Searches objects by default.
      responses:
        200:
          description: List of requested items
          schema:
            type: object
            properties:
              total_count:
                type: integer
              items:
                type: array
                items:
                 $ref: '#/definitions/Object'

#########################################
#               Users                   #
#########################################
  /user:
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
      tags:
        - Users
      description: Get the current user basic information.
      responses:
        200:
          description: User object
          schema:
            $ref: '#/definitions/User'

  /users/{username}:
    parameters:
      - $ref: '#/parameters/username'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Users
      description: Get basic information about a user.
      responses:
        200:
          description: The user information
          schema:
            $ref: '#/definitions/User'

  /users/{username}/following:
    parameters:
      - $ref: '#/parameters/username'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Users
      description: Get a user's followings.
      responses:
        200:
          description: List of users
          schema:
            type: object
            properties:
              total_count:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/User'

  /users/{username}/followers:
    parameters:
      - $ref: '#/parameters/username'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Users
      description: Get a user's followers.
      responses:
        200:
          description: List of users
          schema:
            type: object
            properties:
              total_count:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/User'

  /users/{username}/objects:
    parameters:
      - $ref: '#/parameters/username'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Users
        - Objects
      description: Get a user's objects.
      responses:
        200:
          description: List of objects
          schema:
            $ref: '#/definitions/Objects'

  /users/{username}/objects_liked:
    parameters:
      - $ref: '#/parameters/username'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Users
        - Objects
      description: Get a user's liked objects.
      responses:
        200:
          description: List of objects
          schema:
            type: object
            properties:
              total_count:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/Object'

  /users/{username}/collections:
    parameters:
      - $ref: '#/parameters/username'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Users
        - Objects
        - Collections
      description: Get a user's collections.
      responses:
        200:
          description: List of collections
          schema:
            type: object
            properties:
              total_count:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/OneCollection'

  /users/{username}/collections/{collection_slug}:
    parameters:
      - $ref: '#/parameters/username'
      - $ref: '#/parameters/collection_slug'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Users
      description: Get a user's collections.
      responses:
        200:
          description: The collection information and its objects
          schema:
            $ref: '#/definitions/Collection'

#########################################
#               Objects                 #
#########################################
  /objects/{object_id}:
    parameters:
      - $ref: '#/parameters/object_id'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Objects
      description: Get information about an object.
      responses:
        200:
          description: The 3D object object
          schema:
            $ref: '#/definitions/Object'

  /objects/{object_id}/files:
    parameters:
      - $ref: '#/parameters/object_id'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Objects
        - Files
      description: Get the list of files of the object.
      responses:
        200:
          description: List of files of the object
          schema:
            type: object
            properties:
              total_count:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/File'

  /objects/{object_id}/prints:
    parameters:
      - $ref: '#/parameters/object_id'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
       - key: []
      tags:
        - Objects
        - Prints
      description: Get the list of prints of the object.
      responses:
        200:
          description: The 3D file information
          schema:
            type: object
            properties:
              total_count:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/Print'

  /objects/{object_id}/upload_status:
    parameters:
      - $ref: '#/parameters/object_id'
    get:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
      tags:
        - Objects
        - Upload
      description: Check the status of an object and its files.
      responses:
        200:
          description: Object
          schema:
            $ref: '#/definitions/ObjectUploadStatus'

  /object:
    post:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
      parameters:
        - $ref: '#/parameters/object_metadata'
      tags:
        - Objects
        - Upload
      description: Sent object metadata.
      responses:
        200:
          description: The 3D object object
          schema:
            $ref: '#/definitions/ObjectUpload'

    patch:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
      parameters:
        - $ref: '#/parameters/object_patch_metadata'
      tags:
        - Objects
        - Upload
      description: Sent object metadata.
      responses:
        200:
          description: The 3D object object
          schema:
            $ref: '#/definitions/ObjectUpload'

#########################################
#               Files                 #
#########################################
  /files/{file_id}:
    parameters:
      - $ref: '#/parameters/file_id'
    get:
      security:
        - oauth_authorization_code:
          - basic
        - oauth_implicit:
          - basic
        - key: []
      tags:
        - Objects
      description: Information of a file including the download link
      responses:
        200:
          schema:
            $ref: '#/definitions/File'
          description: "Information of a file including the download link"

  /file:
    parameters:
       - $ref: '#/parameters/upload_id'
    post:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
      tags:
        - Files
        - Upload
      description: Upload a file
      responses:
        201:
          schema:
            type: object
            properties:
              filename:
                type: string
          description: "file created"

  /image:
    parameters:
       - $ref: '#/parameters/upload_id'
    post:
      security:
       - oauth_authorization_code:
         - basic
       - oauth_implicit:
         - basic
      tags:
        - Files
        - Upload
      description: Upload an image
      responses:
        201:
          schema:
            type: object
            properties:
              filename:
                type: string
          description: "image created"

#########################################
#               Collections             #
#########################################
  /collections:
    parameters:
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      tags:
        - Collections
      description: Get all the public collections
      responses:
        200:
          description: The collection information
          schema:
            type: object
            properties:
              total_count:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/OneCollection'


  /collections/{collection_id}:
    parameters:
      - $ref: '#/parameters/collection_id'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      tags:
        - Collections
      description: Get information about a collection.
      responses:
        200:
          description: The collection information and its objects
          schema:
            $ref: '#/definitions/Collection'

#########################################
#               Categories              #
#########################################
  /categories:
    parameters:
      - $ref: '#/parameters/top_category'
      - $ref: '#/parameters/page'
      - $ref: '#/parameters/per_page'
    get:
      tags:
        - Categories
      description: Get information about a category.
      responses:
        200:
          description: The category information and its children
          schema:
            type: object
            properties:
              total_count:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/Category'

  /categories/{category_id}:
    parameters:
      - $ref: '#/parameters/category_id'
    get:
      tags:
        - Categories
      description: Get information about a category.
      responses:
        200:
          description: The category information and its children
          schema:
            $ref: '#/definitions/Category'

################################################################################
#                                   Parameters                                 #
################################################################################
parameters:
  q:
    name: q
    in: query
    required: true
    description: Search query. See the details query syntax document
    type: string
  page:
    name: page
    in: query
    required: false
    description: Page number. Default is 1
    type: string
  per_page:
    name: per_page
    in: query
    required: false
    description: Number of results per page. Default is 20
    type: string
  sort:
    name: sort
    in: query
    required: false
    description: "Sort results by: 'visits', 'date', 'popularity'."
    type: string
  order:
    name: order
    in: query
    required: false
    description: "Sorting order: 'desc', 'asc' (Defaults to desc)."
    type: string
  featured:
    name: featured
    in: query
    required: false
    description: "Filter featured object: 0: Non-featured, 1: featured"
    type: string
  support:
    name: support
    in: query
    required: false
    description: "Filter printing support-free objects: 1: support-free"
    type: string
  cat:
    name: cat
    in: query
    required: false
    description: "Filter object of a certain category, by the category id. eg. cat={category_id}"
    type: string
  complexity:
    name: complexity
    in: query
    required: false
    description: "Filter object difficulty (How hard to build) : 'eas', 'med', 'diff'"
    type: string
  tech:
    name: tech
    in: query
    required: false
    description: "Filter printing technology recommanded for the object: eg. 'DLP/SLA'"
    type: string
  remix:
    name: remix
    in: query
    required: false
    description: "License filter: the designer accepted his object the remixed."
    type: string
  commercial_use:
    name: commercial_use
    in: query
    required: false
    description: "License filter: the designer accepted commercial use of his object."
    type: string
  exclusive:
    name: exclusive
    in: query
    required: false
    description: "License filter: this object should be shared exclusivly on MyMiniFactory."
    type: string
  object_metadata:
    name: metadata
    in: body
    required: true
    description: Metadata for submitting a for object
    schema:
     $ref: '#/definitions/ObjectMetadata'
  object_patch_metadata:
    name: patch_metadata
    in: body
    required: true
    description: Edit the fields of an object. Must be the owner.
    schema:
     $ref: '#/definitions/ObjectPatchMetadata'
  access_token:
    name: access_token
    in: query
    description: API Access token
    type: string
    required: true
  username:
    name: username
    in: path
    description: The user's username
    type: string
    required: true
  object_id:
    name: object_id
    in: path
    description: The object identifier number
    type: number
    required: true
  file_id:
    name: file_id
    in: path
    description: The file identifier number
    type: string
    required: true
  upload_id:
    name: upload_id
    in: query
    description: Temporary identifier to upload a file
    type: string
    required: true
  collection_id:
    name: collection_id
    in: path
    description: The collection identifier number
    type: string
    required: true
  collection_slug:
    name: collection_slug
    in: path
    description: The collection slug name
    type: string
    required: true
  category_id:
    name: category_id
    in: path
    description: The category identifier number
    type: string
    required: true
  top_category:
    name: top
    in: query
    description: Filter top categories
    type: boolean
    required: false

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  User:
    type: object
    properties:
      username:
        type: string
      name:
        type: string
      profile_url:
        type: string
      avatar_url:
        type: string
      avatar_thumbnail_url:
        type: string
      bio:
        type: string
      website:
        type: string

  Objects:
    type: object
    properties:
      total_count:
        type: integer
      items:
        type: array
        items:
          - $ref: '#/definitions/Object'

  Object:
    type: object
    properties:
      id:
        type: integer
      url:
        type: string
      archive_download_url:
        type: string
        description: Available ONLY with Oauth connected User. Not with API key.
      parent_id:
        type: integer
      name:
        type: string
      visibility:
          type: string
          description: "0: Private, 2: Public"
      description:
        type: string
      views:
        type: integer
      likes:
        type: integer
      published_at:
        type: string
        description: The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
      featured:
        type: string
      complexity:
        type: integer
      dimensions:
        type: string
      material_quantity:
        type: string
      designer:
        $ref: '#/definitions/User'
      images:
        type: array
        items:
          $ref: '#/definitions/Image'
      files:
        type: array
        items:
          $ref: '#/definitions/File'
      categories:
        type: array
        items:
          $ref: '#/definitions/OneCategory'
      tags:
        type: array
        items:
          type: string
      licenses:
        type: array
        items:
          $ref: '#/definitions/License'

  File:
    type: object
    properties:
      id:
        type: integer
      filename:
        type: string
      description:
        type: string
      download_url:
        type: string
        description: Available ONLY with Oauth connected User. Not with API key.
      thumbnail_url:
        type: string
      size:
        type: string
  Print:
    type: object
    properties:
      id:
        type: integer
      original:
        type: object
        properties:
          url:
            type: string
          width:
            type: string
          height:
            type: string
      thumbnail:
        type: object
        properties:
          url:
            type: string
          width:
            type: string
          height:
            type: string
      standard:
        type: object
        properties:
          url:
            type: string
          width:
            type: string
          height:
            type: string
  Image:
    type: object
    properties:
      id:
        type: integer
      is_primary:
        type: boolean
      original:
        type: object
        properties:
          url:
            type: string
          width:
            type: string
          height:
            type: string
      thumbnail:
        type: object
        properties:
          url:
            type: string
          width:
            type: string
          height:
            type: string
      standard:
        type: object
        properties:
          url:
            type: string
          width:
            type: string
          height:
            type: string
  Collection:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      slug:
        type: string
      url:
        type: string
      owner:
        $ref: '#/definitions/User'
      featured:
        type: boolean
      public:
        type: boolean
      created_at:
        type: string
        description: The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
      description:
        type: string
      cover_object:
        $ref: '#/definitions/Object'
      objects:
        $ref: '#/definitions/Objects'
  OneCollection:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      slug:
        type: string
      url:
        type: string
      owner:
        $ref: '#/definitions/User'
      featured:
        type: boolean
      public:
        type: boolean
      created_at:
        type: string
        description: The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.
      description:
        type: string
      cover_object:
        $ref: '#/definitions/Object'
  Category:
    type: object
    properties:
      id:
        type: integer
      slug:
        type: string
      url:
        type: string
      name:
        type: string
      children:
        type: object
        properties:
          total_count:
            type: integer
          items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                slug:
                  type: string
                name:
                  type: string
      parent:
          type: object
          properties:
            id:
              type: integer
            slug:
              type: string
            name:
              type: string
      objects:
        $ref: '#/definitions/Objects'
  OneCategory:
    type: object
    properties:
      id:
        type: integer
      slug:
        type: string
      url:
        type: string
      name:
        type: string
      children:
        type: object
        properties:
          total_count:
            type: integer
          items:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                slug:
                  type: string
                name:
                  type: string
      parent:
          type: object
          properties:
            id:
              type: integer
            slug:
              type: string
            name:
              type: string
  ObjectMetadata:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      visibility:
        type: integer
        default: 2
        description: "2: Public, 0: Private"
      how_to:
        type: string
      dimensions:
        type: string
      time_to_do_from:
        type: integer
      time_to_do_to:
        type: integer
      support_free:
        type: boolean
      filament_quantity:
        type: string
      client_url:
        type: string
      tags:
        type: string
      licenses:
        type: array
        items:
          $ref: '#/definitions/License'
      files:
        type: array
        items:
          $ref: '#/definitions/FileUploadRequest'
      images:
        type: array
        items:
          $ref: '#/definitions/ImageUploadRequest'
  ObjectPatchMetadata:
    type: object
    properties:
      visibility:
        type: integer
        default: 2
        description: "2: Public, 0: Private"
  ObjectUpload:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      object_status_url:
        type: string
      object_url:
        type: string
      files:
        type: array
        items:
          $ref: '#/definitions/FileUploadId'
      images:
        type: array
        items:
          $ref: '#/definitions/ImageUploadId'

  ObjectUploadStatus:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      files:
        type: array
        items:
          $ref: '#/definitions/FileUploadStatus'
      images:
        type: array
        items:
          $ref: '#/definitions/ImageUploadStatus'

  FileUploadRequest:
   type: object
   properties:
    filename:
      type: string
    size:
      type: integer

  ImageUploadRequest:
    type: object
    properties:
      filename:
        type: string
      size:
        type: integer

  FileUploadStatus:
    type: object
    properties:
      upload_id:
        type: string
      filename:
        type: string
      status:
        type: string

  ImageUploadStatus:
    type: object
    properties:
      upload_id:
        type: string
      filename:
        type: string
      status:
        type: string

  FileUploadId:
    type: object
    properties:
      upload_id:
        type: string
      filename:
        type: string

  ImageUploadId:
    type: object
    properties:
      upload_id:
        type: string
      filename:
        type: string

  License:
    type: object
    properties:
      type:
        type: string
        description: "Possible values are: 'mention', 'remix', 'commercial-use', 'exclusivity'"
      value:
        type: boolean
