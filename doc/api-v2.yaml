openapi: 3.0.0
info:
  title: MyMiniFactory API
  description: 3D printable object API
  version: '2'
paths:
  /search:
    parameters:
      - $ref: '#/components/parameters/q'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/order'
      - $ref: '#/components/parameters/cat'
      - $ref: '#/components/parameters/support'
      - $ref: '#/components/parameters/tech'
      - $ref: '#/components/parameters/complexity'
      - $ref: '#/components/parameters/featured'
      - $ref: '#/components/parameters/remix'
      - $ref: '#/components/parameters/commercial_use'
      - $ref: '#/components/parameters/exclusive'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Search
      description: Give search results according the the query. Searches objects by default.
      responses:
        '200':
          description: List of requested items
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Object'
  /user:
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
      tags:
        - Users
      description: Get the current user basic information.
      responses:
        '200':
          description: User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  '/users/{username}':
    parameters:
      - $ref: '#/components/parameters/username'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Users
      description: Get basic information about a user.
      responses:
        '200':
          description: The user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  '/users/{username}/following':
    parameters:
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Users
      description: Get a user's followings.
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
  '/users/{username}/followers':
    parameters:
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Users
      description: Get a user's followers.
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
  '/users/{username}/objects':
    parameters:
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Users
        - Objects
      description: Get a user's objects.
      responses:
        '200':
          description: List of objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objects'
  '/users/{username}/objects_liked':
    parameters:
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Users
        - Objects
      description: Get a user's liked objects.
      responses:
        '200':
          description: List of objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Object'
  '/users/{username}/collections':
    parameters:
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Users
        - Objects
        - Collections
      description: Get a user's collections.
      responses:
        '200':
          description: List of collections
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OneCollection'
  '/users/{username}/collections/{collection_slug}':
    parameters:
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/collection_slug'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Users
      description: Get a user's collections.
      responses:
        '200':
          description: The collection information and its objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
  '/objects/{object_id}':
    parameters:
      - $ref: '#/components/parameters/object_id'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Objects
      description: Get information about an object.
      responses:
        '200':
          description: The 3D object object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
  '/objects/{object_id}/files':
    parameters:
      - $ref: '#/components/parameters/object_id'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Objects
        - Files
      description: Get the list of files of the object.
      responses:
        '200':
          description: List of files of the object
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/File'
  '/objects/{object_id}/prints':
    parameters:
      - $ref: '#/components/parameters/object_id'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Objects
        - Prints
      description: Get the list of prints of the object.
      responses:
        '200':
          description: The 3D file information
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Print'
  '/objects/{object_id}/upload_status':
    parameters:
      - $ref: '#/components/parameters/object_id'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
      tags:
        - Objects
        - Upload
      description: Check the status of an object and its files.
      responses:
        '200':
          description: Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectUploadStatus'
  /object:
    post:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectMetadata'
        description: Metadata for submitting a for object
        required: true
      tags:
        - Objects
        - Upload
      description: Sent object metadata.
      responses:
        '200':
          description: The 3D object object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectUpload'
    patch:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectPatchMetadata'
        description: Edit the fields of an object. Must be the owner.
        required: true
      tags:
        - Objects
        - Upload
      description: Sent object metadata.
      responses:
        '200':
          description: The 3D object object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectUpload'
  '/files/{file_id}':
    parameters:
      - $ref: '#/components/parameters/file_id'
    get:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
        - key: []
      tags:
        - Objects
      description: Information of a file including the download link
      responses:
        '200':
          description: Information of a file including the download link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
  /file:
    parameters:
      - $ref: '#/components/parameters/upload_id'
    post:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
      tags:
        - Files
        - Upload
      description: Upload a file
      responses:
        '201':
          description: file created
          content:
            application/json:
              schema:
                type: object
                properties:
                  filename:
                    type: string
  /image:
    parameters:
      - $ref: '#/components/parameters/upload_id'
    post:
      security:
        - oauth_authorization_code:
            - basic
        - oauth_implicit:
            - basic
      tags:
        - Files
        - Upload
      description: Upload an image
      responses:
        '201':
          description: image created
          content:
            application/json:
              schema:
                type: object
                properties:
                  filename:
                    type: string
  /collections:
    parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      tags:
        - Collections
      description: Get all the public collections
      responses:
        '200':
          description: The collection information
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/OneCollection'
  '/collections/{collection_id}':
    parameters:
      - $ref: '#/components/parameters/collection_id'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      tags:
        - Collections
      description: Get information about a collection.
      responses:
        '200':
          description: The collection information and its objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
  /categories:
    parameters:
      - $ref: '#/components/parameters/top_category'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per_page'
    get:
      tags:
        - Categories
      description: Get information about a category.
      responses:
        '200':
          description: The category information and its children
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
  '/categories/{category_id}':
    parameters:
      - $ref: '#/components/parameters/category_id'
    get:
      tags:
        - Categories
      description: Get information about a category.
      responses:
        '200':
          description: The category information and its children
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
servers:
  - url: 'https://www.myminifactory.com/api/v2'
components:
  parameters:
    q:
      name: q
      in: query
      required: true
      description: Search query. See the details query syntax document
      schema:
        type: string
    page:
      name: page
      in: query
      required: false
      description: Page number. Default is 1
      schema:
        type: integer
    per_page:
      name: per_page
      in: query
      required: false
      description: Number of results per page. Default is 20
      schema:
        type: integer
    sort:
      name: sort
      in: query
      required: false
      description: 'Sort results by: ''visits'', ''date'', ''popularity''.'
      schema:
        type: string
    order:
      name: order
      in: query
      required: false
      description: 'Sorting order: ''desc'', ''asc'' (Defaults to desc).'
      schema:
        type: string
    featured:
      name: featured
      in: query
      required: false
      description: 'Filter featured object: 0: Non-featured, 1: featured'
      schema:
        type: string
    support:
      name: support
      in: query
      required: false
      description: 'Filter printing support-free objects: 1: support-free'
      schema:
        type: string
    cat:
      name: cat
      in: query
      required: false
      description: 'Filter object of a certain category, by the category id. eg. cat={category_id}'
      schema:
        type: string
    complexity:
      name: complexity
      in: query
      required: false
      description: 'Filter object difficulty (How hard to build) : ''eas'', ''med'', ''diff'''
      schema:
        type: string
    tech:
      name: tech
      in: query
      required: false
      description: 'Filter printing technology recommanded for the object: eg. ''DLP/SLA'''
      schema:
        type: string
    remix:
      name: remix
      in: query
      required: false
      description: 'License filter: the designer accepted his object the remixed.'
      schema:
        type: string
    commercial_use:
      name: commercial_use
      in: query
      required: false
      description: 'License filter: the designer accepted commercial use of his object.'
      schema:
        type: string
    exclusive:
      name: exclusive
      in: query
      required: false
      description: 'License filter: this object should be shared exclusivly on MyMiniFactory.'
      schema:
        type: string
    access_token:
      name: access_token
      in: query
      description: API Access token
      required: true
      schema:
        type: string
    username:
      name: username
      in: path
      description: The user's username
      required: true
      schema:
        type: string
    object_id:
      name: object_id
      in: path
      description: The object identifier number
      required: true
      schema:
        type: number
    file_id:
      name: file_id
      in: path
      description: The file identifier number
      required: true
      schema:
        type: string
    upload_id:
      name: upload_id
      in: query
      description: Temporary identifier to upload a file
      required: true
      schema:
        type: string
    collection_id:
      name: collection_id
      in: path
      description: The collection identifier number
      required: true
      schema:
        type: string
    collection_slug:
      name: collection_slug
      in: path
      description: The collection slug name
      required: true
      schema:
        type: string
    category_id:
      name: category_id
      in: path
      description: The category identifier number
      required: true
      schema:
        type: string
    top_category:
      name: top
      in: query
      description: Filter top categories
      required: false
      schema:
        type: boolean
  securitySchemes:
    oauth_authorization_code:
      description: OAuth 2.0 Authentication with Authentication code flow
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://auth.myminifactory.com/web/authorize'
          tokenUrl: 'https://auth.myminifactory.com/v1/oauth/'
          scopes:
            basic: |
              to read any and all private data related to a user (e.g. profile info.)
            download: |
              to have download file download authorisations
    oauth_implicit:
      description: OAuth 2.0 Authentication with Implicit flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://auth.myminifactory.com/web/authorize'
          scopes:
            basic: |
              to read any and all private data related to a user (e.g. profile info.)
            download: |
              to have download file download authorisations
    key:
      type: apiKey
      in: query
      name: key
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        is_admin:
          type: boolean
        is_premium:
          type: boolean
        is_store_manager:
          type: boolean
        profile_url:
          type: string
        profile_settings_url:
          type: string
        avatar_url:
          type: string
        avatar_thumbnail_url:
          type: string
        cover_url:
          type: string
        bio:
          type: string
        website:
          type: string
        followings:
          type: integer
        followers:
          type: integer
        likes:
          type: integer
        views:
          type: integer
        objects:
          type: integer
        total_prints:
          type: integer
        total_collections:
          type: integer
        printing_since:
          $ref: '#/components/schemas/Timestamp'
        notifications_settings:
          type: array
          items:
            $ref: '#/components/schemas/NotificationSetting'
        social_networks:
          $ref: '#/components/schemas/SocialNetworks'
        printers:
          $ref: '#/components/schemas/Printers'
        following:
          type: boolean
        postcode:
          type: object
        contact_number:
          type: string
        birthday:
          type: object
        allow_email:
          type: integer
        email:
          type: string
    NotificationSetting:
      type: object
      properties:
        id:
          type: integer
        template_id:
          type: string
        group:
          type: string
        name:
          type: string
        value:
          type: boolean
        icon:
          type: string
    SocialNetworks:
      type: object
      properties:
        total_count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/SocialNetwork'
    SocialNetwork:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        value:
          type: string
    Printers:
      type: object
      properties:
        total_count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Printer'
    Printer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        automatic_slicing:
          type: boolean
        premium:
          type: boolean
        model:
          type: string
        brand:
          type: string
        image:
          type: string
        website:
          type: string
        nozzle_diameter:
          type: number
        dimensions:
          $ref: '#/components/schemas/Dimensions'
    Dimensions:
      type: object
      properties:
        x:
          type: integer
        'y':
          type: integer
        z:
          type: integer
    Timestamp:
      type: object
      properties:
        date:
          type: string
        timezone:
          type: string
        timezone_time:
          type: integer
    Objects:
      type: object
      properties:
        total_count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Object'
    Object:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        archive_download_url:
          type: string
          description: Available ONLY with Oauth connected User. Not with API key.
        parent_id:
          type: integer
        name:
          type: string
        visibility:
          type: string
          description: '0: Private, 2: Public'
        description:
          type: string
        views:
          type: integer
        likes:
          type: integer
        published_at:
          type: string
          description: 'The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        featured:
          type: string
        complexity:
          type: integer
        dimensions:
          type: string
        material_quantity:
          type: string
        designer:
          $ref: '#/components/schemas/User'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/OneCategory'
        tags:
          type: array
          items:
            type: string
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/License'
    File:
      type: object
      properties:
        id:
          type: integer
        filename:
          type: string
        description:
          type: string
        download_url:
          type: string
          description: Available ONLY with Oauth connected User. Not with API key.
        thumbnail_url:
          type: string
        size:
          type: string
    Print:
      type: object
      properties:
        id:
          type: integer
        original:
          type: object
          properties:
            url:
              type: string
            width:
              type: string
            height:
              type: string
        thumbnail:
          type: object
          properties:
            url:
              type: string
            width:
              type: string
            height:
              type: string
        standard:
          type: object
          properties:
            url:
              type: string
            width:
              type: string
            height:
              type: string
    Image:
      type: object
      properties:
        id:
          type: integer
        is_primary:
          type: boolean
        original:
          type: object
          properties:
            url:
              type: string
            width:
              type: string
            height:
              type: string
        thumbnail:
          type: object
          properties:
            url:
              type: string
            width:
              type: string
            height:
              type: string
        standard:
          type: object
          properties:
            url:
              type: string
            width:
              type: string
            height:
              type: string
    Collection:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string
        url:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        featured:
          type: boolean
        public:
          type: boolean
        created_at:
          type: string
          description: 'The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        description:
          type: string
        cover_object:
          $ref: '#/components/schemas/Object'
        objects:
          $ref: '#/components/schemas/Objects'
    OneCollection:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string
        url:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        featured:
          type: boolean
        public:
          type: boolean
        created_at:
          type: string
          description: 'The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.'
        description:
          type: string
        cover_object:
          $ref: '#/components/schemas/Object'
    Category:
      type: object
      properties:
        id:
          type: integer
        slug:
          type: string
        url:
          type: string
        name:
          type: string
        children:
          type: object
          properties:
            total_count:
              type: integer
            items:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  slug:
                    type: string
                  name:
                    type: string
        parent:
          type: object
          properties:
            id:
              type: integer
            slug:
              type: string
            name:
              type: string
        objects:
          $ref: '#/components/schemas/Objects'
    OneCategory:
      type: object
      properties:
        id:
          type: integer
        slug:
          type: string
        url:
          type: string
        name:
          type: string
        children:
          type: object
          properties:
            total_count:
              type: integer
            items:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  slug:
                    type: string
                  name:
                    type: string
        parent:
          type: object
          properties:
            id:
              type: integer
            slug:
              type: string
            name:
              type: string
    ObjectMetadata:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        visibility:
          type: integer
          default: 2
          description: '2: Public, 0: Private'
        how_to:
          type: string
        dimensions:
          type: string
        time_to_do_from:
          type: integer
        time_to_do_to:
          type: integer
        support_free:
          type: boolean
        filament_quantity:
          type: string
        client_url:
          type: string
        tags:
          type: string
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/License'
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileUploadRequest'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageUploadRequest'
    ObjectPatchMetadata:
      type: object
      properties:
        visibility:
          type: integer
          default: 2
          description: '2: Public, 0: Private'
    ObjectUpload:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        object_status_url:
          type: string
        object_url:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileUploadId'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageUploadId'
    ObjectUploadStatus:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileUploadStatus'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageUploadStatus'
    FileUploadRequest:
      type: object
      properties:
        filename:
          type: string
        size:
          type: integer
    ImageUploadRequest:
      type: object
      properties:
        filename:
          type: string
        size:
          type: integer
    FileUploadStatus:
      type: object
      properties:
        upload_id:
          type: string
        filename:
          type: string
        status:
          type: string
    ImageUploadStatus:
      type: object
      properties:
        upload_id:
          type: string
        filename:
          type: string
        status:
          type: string
    FileUploadId:
      type: object
      properties:
        upload_id:
          type: string
        filename:
          type: string
    ImageUploadId:
      type: object
      properties:
        upload_id:
          type: string
        filename:
          type: string
    License:
      type: object
      properties:
        type:
          type: string
          description: 'Possible values are: ''mention'', ''remix'', ''commercial-use'', ''exclusivity'''
        value:
          type: boolean
