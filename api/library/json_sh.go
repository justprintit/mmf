package library

//go:generate ./json.sh

import (
	"context"
	"os"

	"github.com/justprintit/mmf/api/library/json"
)

// Code generated by ./json.sh DO NOT EDIT

func (c *Client) GetSharedLibrary(ctx context.Context) (*json.Users, error) {
	return c.GetSharedLibraryPage(ctx, 0)
}

func (c *Client) GetSharedLibraryPage(ctx context.Context, page int) (*json.Users, error) {
	out := &json.Users{}

	resp, err := c.GetLibraryPage(ctx, "shared", page, out)
	if err != nil {
		os.Stdout.Write(resp.Body())
	}
	return out, err
}

func (c *Client) GetPurchasesLibrary(ctx context.Context) (*json.Objects, error) {
	return c.GetPurchasesLibraryPage(ctx, 0)
}

func (c *Client) GetPurchasesLibraryPage(ctx context.Context, page int) (*json.Objects, error) {
	out := &json.Objects{}

	resp, err := c.GetLibraryPage(ctx, "purchases", page, out)
	if err != nil {
		os.Stdout.Write(resp.Body())
	}
	return out, err
}

func (c *Client) GetPledgesLibrary(ctx context.Context) (*json.Objects, error) {
	return c.GetPledgesLibraryPage(ctx, 0)
}

func (c *Client) GetPledgesLibraryPage(ctx context.Context, page int) (*json.Objects, error) {
	out := &json.Objects{}

	resp, err := c.GetLibraryPage(ctx, "campaings", page, out)
	if err != nil {
		os.Stdout.Write(resp.Body())
	}
	return out, err
}
